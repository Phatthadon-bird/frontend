"use client";

import { useState, useMemo } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import Link from "next/link";

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏™‡∏ô‡∏∏‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå
const players = [
  { nameTh: "‡∏£‡∏≠‡∏ô‡∏ô‡∏µ‡πà ‡πÇ‡∏≠‡∏ã‡∏∏‡∏•‡∏•‡∏¥‡πÅ‡∏ß‡∏ô", nameEn: "ronnie", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡∏°‡∏¥‡πâ‡∏á‡∏Ñ‡πå ‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ", nameEn: "mingsaraburi", country: "‡πÑ‡∏ó‡∏¢" },
  { nameTh: "‡πÄ‡∏ó‡∏û‡πÑ‡∏ä‡∏¢‡∏≤ ‡∏≠‡∏∏‡πà‡∏ô‡∏´‡∏ô‡∏π", nameEn: "tepsachaiya", country: "‡πÑ‡∏ó‡∏¢", alias: ["f1", "‡πÄ‡∏≠‡∏ü‡∏ß‡∏±‡∏ô", "f-1"] },
  { nameTh: "‡∏°‡∏≤‡∏£‡πå‡∏Ñ ‡πÄ‡∏ã‡∏•‡∏ö‡∏µ‡πâ", nameEn: "mark-selby", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡∏î‡∏¥‡∏á ‡∏à‡∏∏‡∏ô‡∏´‡∏∏‡∏¢", nameEn: "ding-junhui", country: "‡∏à‡∏µ‡∏ô" },
  { nameTh: "‡∏à‡∏≠‡∏´‡πå‡∏ô ‡∏Æ‡∏¥‡∏Å‡∏Å‡∏¥‡πâ‡∏ô‡∏™‡πå", nameEn: "john-higgins", country: "‡∏™‡∏Å‡∏≠‡∏ï‡πÅ‡∏•‡∏ô‡∏î‡πå" },
  { nameTh: "‡∏à‡∏±‡∏î‡∏î‡πå ‡∏ó‡∏£‡∏±‡∏°‡∏õ‡πå", nameEn: "judd-trump", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡∏ô‡∏µ‡∏• ‡πÇ‡∏£‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏ï‡∏™‡∏±‡∏ô", nameEn: "neil-robertson", country: "‡∏≠‡∏≠‡∏™‡πÄ‡∏ï‡∏£‡πÄ‡∏•‡∏µ‡∏¢" },
  { nameTh: "‡∏å‡∏≠‡∏ô ‡πÄ‡∏°‡∏≠‡∏£‡πå‡∏ü‡∏µ‡πà", nameEn: "shaun-murphy", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡πÇ‡∏à‡∏ß ‡∏ã‡∏¥‡∏ô‡∏ñ‡∏á", nameEn: "zhao-xintong", country: "‡∏à‡∏µ‡∏ô" },
  { nameTh: "‡∏™‡∏ï‡∏µ‡πÄ‡∏ü‡πà‡∏ô ‡πÄ‡∏Æ‡∏ô‡∏î‡∏£‡∏µ‡πâ", nameEn: "stephen-hendry", country: "‡∏™‡∏Å‡∏≠‡∏ï‡πÅ‡∏•‡∏ô‡∏î‡πå" },
  { nameTh: "‡∏™‡∏ï‡∏µ‡∏ü ‡πÄ‡∏î‡∏ß‡∏¥‡∏™", nameEn: "steve-davis", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡∏à‡∏¥‡∏°‡∏°‡∏µ‡πà ‡πÑ‡∏ß‡∏ó‡πå", nameEn: "jimmy-white", country: "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" },
  { nameTh: "‡∏Ñ‡∏•‡∏¥‡∏ü ‡∏ò‡∏≠‡∏£‡πå‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏ô", nameEn: "cliff-thorburn", country: "‡πÅ‡∏Ñ‡∏ô‡∏≤‡∏î‡∏≤" },
  { nameTh: "‡πÄ‡∏Ñ‡∏ô ‡πÇ‡∏î‡πÄ‡∏Æ‡∏≠‡∏£‡πå‡∏ï‡∏µ‡πâ", nameEn: "ken-doherty", country: "‡πÑ‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏ô‡∏î‡πå" },
  { nameTh: "‡∏≠‡πÄ‡∏•‡πá‡∏Å‡∏ã‡πå ‡∏Æ‡∏¥‡∏Å‡∏Å‡∏¥‡∏ô‡∏™‡πå", nameEn: "alex-higgins", country: "‡πÑ‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏ô‡∏î‡πå‡πÄ‡∏´‡∏ô‡∏∑‡∏≠", alias: ["hurricane"] },
  { nameTh: "‡πÄ‡∏£‡∏¢‡πå ‡πÄ‡∏£‡∏µ‡∏¢‡∏£‡πå‡∏î‡∏≠‡∏ô", nameEn: "ray-reardon", country: "‡πÄ‡∏ß‡∏•‡∏™‡πå" },
  { nameTh: "‡πÄ‡∏ó‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà ‡∏Å‡∏£‡∏¥‡∏ü‡∏ü‡∏¥‡∏ò‡∏™‡πå", nameEn: "terry-griffiths", country: "‡πÄ‡∏ß‡∏•‡∏™‡πå" },
  { nameTh: "‡∏ï‡πã‡∏≠‡∏á ‡∏®‡∏¥‡∏©‡∏¢‡πå‡∏â‡πà‡∏≠‡∏¢", nameEn: "james-wattana", country: "‡πÑ‡∏ó‡∏¢", alias: ["‡∏ï‡πã‡∏≠‡∏á", "tong"] },
  { nameTh: "‡∏´‡∏°‡∏π ‡∏õ‡∏≤‡∏Å‡∏ô‡πâ‡∏≥", nameEn: "noppon-saengkham", country: "‡πÑ‡∏ó‡∏¢", alias: ["‡∏´‡∏°‡∏π", "‡∏õ‡∏≤‡∏Å‡∏ô‡πâ‡∏≥"] },
];

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π
const pages = [
  { type: "page", title: "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", slug: "/" },
  { type: "page", title: "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤", slug: "/about" },
  { type: "page", title: "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤", slug: "/services" },
  { type: "page", title: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤", slug: "/contect" },
  { type: "page", title: "‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏™‡∏ô‡∏∏‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå", slug: "/racers" },
  { type: "page", title: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", slug: "/more-info" },
  { type: "page", title: "‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏Ç‡πà‡∏á", slug: "/schedule" },
  { type: "page", title: "‡∏•‡∏á‡πÅ‡∏Ç‡πà‡∏á", slug: "/compete" },
  { type: "page", title: "‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", slug: "/racers" },
  { type: "page", title: "‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏ô‡∏∏‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå", slug: "/racers/legend" },
  { type: "page", title: "‡∏ô‡∏±‡∏Å‡∏™‡∏ô‡∏∏‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô", slug: "/news" },
  { type: "page", title: "‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏™‡∏ô‡∏∏‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÇ‡∏•‡∏Å", slug: "/rankings" },
  { type: "page", title: "‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á", slug: "/highlights" },
  { type: "page", title: "admin", slug: "/admin/users" },
];

function slugify(name) {
  return name.toLowerCase().replace(/\s+/g, "-");
}

export default function SearchPageClient() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const queryParam = searchParams.get("query") || "";

  const [input, setInput] = useState(queryParam);

  // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏à
  const data = [
    ...players.map((player) => ({
      type: "player",
      title: player.nameTh,
      slug: `/racers/${slugify(player.nameEn)}`,
      country: player.country,
      alias: player.alias || [],
    })),
    ...pages,
  ];

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ï‡∏≤‡∏° query
  const filteredResults = useMemo(() => {
    if (queryParam.trim() === "") return [];
    const lowerQuery = queryParam.toLowerCase();

    return data.filter((item) => {
      const matchTitle = item.title.toLowerCase().includes(lowerQuery);
      const matchAlias =
        item.alias && item.alias.some((alias) => alias.toLowerCase().includes(lowerQuery));
      const matchCountry = item.country && item.country.toLowerCase().includes(lowerQuery);

      return matchTitle || matchAlias || matchCountry;
    });
  }, [queryParam]);

  // ‡πÅ‡∏ö‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏à
  const playersResults = filteredResults.filter((i) => i.type === "player");
  const pagesResults = filteredResults.filter((i) => i.type !== "player");

  // ‡πÅ‡∏ö‡πà‡∏á‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
  const groupedByCountry = playersResults.reduce((groups, player) => {
    const country = player.country || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®";
    if (!groups[country]) groups[country] = [];
    groups[country].push(player);
    return groups;
  }, {});

  // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà
  const handleSubmit = (e) => {
    e.preventDefault();
    router.push(`/search?query=${encodeURIComponent(input.trim())}`);
  };

  return (
    <div className="container py-5" style={{ maxWidth: 600 }}>
      <h1 className="mb-4 text-center text-primary fw-bold">
        ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:{" "}
        <span className="text-secondary">
          "{queryParam === "" ? "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤" : queryParam}"
        </span>
      </h1>

      <form onSubmit={handleSubmit} className="mb-4 d-flex">
        <input
          type="text"
          className="form-control me-2"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          autoFocus
        />
        <button type="submit" className="btn btn-primary">
          ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        </button>
      </form>

      {queryParam.trim() === "" ? (
        <p className="mt-3 text-center text-muted fs-5">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</p>
      ) : filteredResults.length > 0 ? (
        <>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® */}
          {Object.entries(groupedByCountry).map(([country, players]) => (
            <div key={country} style={{ marginBottom: 24 }}>
              <h3 style={{ borderBottom: "2px solid #0d6efd", paddingBottom: 6 }}>
                üè≥Ô∏è‚Äçüåà ‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®: {country}
              </h3>
              <ul
                className="list-group shadow-sm rounded"
                style={{ padding: 0, listStyle: "none" }}
              >
                {players.map((item, idx) => (
                  <li
                    key={idx}
                    className="list-group-item d-flex justify-content-between align-items-center"
                    style={{
                      transition: "all 0.3s ease",
                      cursor: "pointer",
                      border: "none",
                      padding: "12px 20px",
                      borderBottom: "1px solid #ddd",
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.backgroundColor = "#f0f8ff";
                      e.currentTarget.style.boxShadow = "0 4px 10px rgba(0, 123, 255, 0.1)";
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.backgroundColor = "white";
                      e.currentTarget.style.boxShadow = "none";
                    }}
                  >
                    <Link
                      href={item.slug}
                      className="text-decoration-none fs-5"
                      style={{
                        color: "#0d6efd",
                        display: "flex",
                        alignItems: "center",
                        gap: "0.5rem",
                        transition: "color 0.2s ease",
                      }}
                    >
                      üé± {item.title}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>
          ))}

          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏û‡∏à‡∏≠‡∏∑‡πà‡∏ô ‡πÜ */}
          {pagesResults.length > 0 && (
            <div style={{ marginTop: 30 }}>
              <h3 style={{ borderBottom: "2px solid #198754", paddingBottom: 6 }}>
                üìÑ ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
              </h3>
              <ul
                className="list-group shadow-sm rounded"
                style={{ padding: 0, listStyle: "none" }}
              >
                {pagesResults.map((item, idx) => (
                  <li
                    key={idx}
                    className="list-group-item d-flex justify-content-between align-items-center"
                    style={{
                      transition: "all 0.3s ease",
                      cursor: "pointer",
                      border: "none",
                      padding: "12px 20px",
                      borderBottom: "1px solid #ddd",
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.backgroundColor = "#e6ffed";
                      e.currentTarget.style.boxShadow = "0 4px 10px rgba(25, 135, 84, 0.15)";
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.backgroundColor = "white";
                      e.currentTarget.style.boxShadow = "none";
                    }}
                  >
                    <Link
                      href={item.slug}
                      className="text-decoration-none fs-5"
                      style={{
                        color: "#198754",
                        display: "flex",
                        alignItems: "center",
                        gap: "0.5rem",
                        transition: "color 0.2s ease",
                      }}
                    >
                      üìÑ {item.title}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </>
      ) : (
        <p className="mt-3 text-center text-danger fs-5">
          ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö "{queryParam}"
        </p>
      )}
    </div>
  );
}
